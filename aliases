project_dir=$HOME/Documents/projects

alias ll='ls -al'
alias pj='jq . <<< '
alias pwgen=pw_generator
alias terraform13='/usr/local/opt/terraform/bin/terraform'

pw_generator()
{
  if [ "$#" -ne "2" ]; then
    echo "Pw Generator should have 2 args: byte_count, pw_count."
    return 1
  fi

  byte_count=$1
  pw_count=$2
  if [ "$byte_count" -lt 18 ]; then
    echo "Password length should at least 18 bytes."
    return 1
  fi
  for (( i=0; i < $pw_count; i++ ));
  do
    head -c $byte_count /dev/urandom | base64
  done

}

#############################
### devops-cli related
#############################
export PROJECT_ROOT=$project_dir

#############################
### aws related quick script
#############################
aws_whoami()
{
  aws sts get-caller-identity
}

aws_assume_role()
{
  # example to use:
  # aws_assume_role "arn:aws:iam::073854545754:role/AccountAccessRole"
  role_arn=$1
  result=$(aws sts assume-role --role-arn $role_arn --role-session-name AWSCLI-Session)
  export AWS_ACCESS_KEY_ID=$(echo $result | jq '.Credentials.AccessKeyId' | tr -d '"')
  export AWS_SECRET_ACCESS_KEY=$(echo $result | jq '.Credentials.SecretAccessKey' | tr -d '"')
  export AWS_SESSION_TOKEN=$(echo $result | jq '.Credentials.SessionToken' | tr -d '"')

  aws_whoami
}

###############################
### vault related quick script
###############################
export VAULT_ADDR=https://vault.office.cryptoblk.io/

sign_ssh()
{
  level=$1
  proj=$2
  vault token lookup > /dev/null 2>&1 || vault login -method=oidc
  python3 $project_dir/cblk_vault/vltbuild/vaultcmd.py ssh -l $level -p $proj
}
